# Version of Fluentd
# By default .Chart.AppVersion version is used
# Type: string
# fluentdVersion: "1.0"

# Docker images registry
# This registry will be used for automatic docker image name deduction based on OdahuFlow naming for images
# Each image could be overridden manually in .<service>.image, please see .edi root section or other
# Type: string
imagesRegistry: odahu/

fluentd:
  # This variable can be enabled to setup custom image name for fluentd
  # Type: string
  # image: custom-image:1.0

  # Resources for each instance
  # For declaration format see https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
  resources:
    requests:
      cpu: "300m"
      memory: "256Mi"
    limits:
      cpu: "300m"
      memory: "512Mi"

  # Input port number
  # Type: integer
  port: 24224

output:
  # Where feedback data should be stored
  # Valid values:
  # s3 - AWS S3
  # gcs - Google Cloud Storage
  # azureblob - Azure Blob Storage
  target: "s3"

  # Detail configuration for storing on GCS
  gcs:
    # Type of authorization on GCS
    # Valid values are:
    # - sa - requires k8s-gke-service-account-assigner to be installed in cluster,
    #        adds annotation "accounts.google.com/service-account" to FluentD Pod
    #        value of annotation could be specified in .feedback.output.gcs.customSA
    # - keyfile - requires Google Cloud Service Account with GCS permissions.
    authorization: "sa"

    # Custom name for Service Account for sa-based authorization mode of FluentD
    # For details see authorization directive above
    # By default "<.ingress.globalDomain>-<.Release.Namespace>-collector-sa" is used
    # Type: string
    # customSA: ~

    # GCS bucket name
    # Type: string
    bucket: "odahuFlow-test-store"

    # Google Cloud project ID, required for keyfile based auth
    # Type: string
    # project: ~

    # Keyfile private key ID
    # Type: string
    # private_key_id: ~

    # Keyfile private key
    # Type: string
    # private_key: ~

    # Keyfile client email
    # Type: string
    # client_email: ~

    # Keyfile client ID
    # Type: string
    # client_id: ~

    # Keyfile auth URI
    # Type: string
    # auth_uri: ~

    # Keyfile token URI
    # Type: string
    # token_uri: ~

    # Keyfile auth provider certificate URL
    # Type: string
    # auth_provider_x509_cert_url: ~

    # Keyfile client certificate URL
    # Type: string
    # client_x509_cert_url: ~

  # Detail configuration for storing on S3
  s3:
    # Type of authorization on S3
    # Valid values are:
    # - iam - requires kube2iam to be installed in cluster,
    #         adds annotation "iam.amazonaws.com/role" to FluentD Pod
    #         value of annotation could be specified in .feedback.output.s3.customIAMRole
    # - secret - provide AWS Key ID and AWS Secret Key in ENV variables for FluentD server
    #            AWS Key ID and AWS Secret Key should be specified in
    #            .feedback.output.s3.AWSKeyID and .feedback.output.s3.AWSSecretKey
    authorization: "iam"

    # Custom name for IAM for iam-based authorization mode of FluentD
    # For details see authorization directive above
    # By default "<.ingress.globalDomain>-<.Release.Namespace>-collector-role" is used
    # Type: string
    #customIAMRole: ~

    # AWS Key ID for secret-based authorization mode of FluentD
    # For details see authorization directive above
    # Type: string
    #AWSKeyID: ~

    # AWS Secret Key for secret-based authorization mode of FluentD
    # For details see authorization directive above
    # Type: string
    #AWSSecretKey: ~

    # S3 bucket name
    # Type: string
    bucket: ~

    # S3 region
    # Type: string
    region: ~

  # Detail configuration for storing data in Azure Blob storage
  azureblob:
    # Type of authorization in Azure Blob storage
    # Valid values are:
    #   - accesskey
    #   - sastoken
    authorization: "sastoken"

    # Name of Azure Storage Account
    # Type: string
    #AzureStorageAccount: ~

    # One of two keys that used to authorize access to Azure storage account
    # Type: string
    #AzureStorageAccessKey: ~

    # A shared access signature (SAS) is a signed URI that points to one or more storage
    # resources and includes a token that contains a special set of query parameters.
    # This variable should contain SAS token to Azure Blob storage service account.
    # Type: string
    #AzureStorageSasToken: ~

    # Azure Blob container name
    # Type: string
    bucket: ~

  # Storage type
  # Type: string
  # Valid values:
  # - gzip (default)
  # - json
  # - text
  storeAs: "json"

  # Storage format
  # Type: string
  # Valid values:
  # - out_file (default)
  # - json
  # - ltsv
  # - single_value
  format: "json"

  # Directory for data storing
  # Type: string
  path: "model_log/${tag}/${model_name}/${model_version}/year=%Y/month=%m/day=%d/"

  # Format of file names
  # Type: string
  objectKeyFormat: "%{path}%{time_slice}_%{index}.%{file_extension}"

  # Slicing format
  # Type: string
  timeSliceFormat: "%Y%m%d%H"

  # Slicing wait time
  # Type: string
  timeSliceWait: "5m"

  # Buffering (chunking)
  buffering:
    # Chunks length (window size)
    # Type: string
    timekey: 1m

    # Delay for flush (after end of window)
    # Type: string
    timekeyWait: 0s

    # Temporary buffering location
    # Type: string
    path: /tmp
