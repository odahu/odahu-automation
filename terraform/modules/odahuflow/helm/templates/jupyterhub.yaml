proxy:
  secretToken: ${secret_token}

hub:
  extraConfig:
    myConfig.py: |
      c.Spawner.default_url = '/lab'

  ingress:
    enabled: true
    hosts:
      - ""
    pathSuffix:
      - /jupyterhub
    annotations:
      nginx.ingress.kubernetes.io/auth-signin: https://${cluster_domain}/oauth2/start?rd=https://$host$escaped_request_uri
      nginx.ingress.kubernetes.io/auth-url: http://oauth2-proxy.kube-system.svc.cluster.local:4180/oauth2/auth
      nginx.ingress.kubernetes.io/configuration-snippet: |-
        set_escape_uri $escaped_request_uri $request_uri;
        auth_request_set $user   $upstream_http_x_auth_request_user;
        auth_request_set $email  $upstream_http_x_auth_request_email;
        auth_request_set $jwt    $upstream_http_x_auth_request_access_token;
        auth_request_set $_oauth2_proxy_1 $upstream_cookie__oauth2_proxy_1;

        proxy_set_header X-User            $user;
        proxy_set_header X-Email           $email;
        proxy_set_header X-JWT             $jwt;
        proxy_set_header Authorization     "";

        access_by_lua_block {
            if ngx.var._oauth2_proxy_1 ~= "" then
                ngx.header["Set-Cookie"] = "_oauth2_proxy_1=" .. ngx.var._oauth2_proxy_1 .. ngx.var.auth_cookie:match("(; .*)")
            end
        }
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      nginx.ingress.kubernetes.io/rewrite-target: /

