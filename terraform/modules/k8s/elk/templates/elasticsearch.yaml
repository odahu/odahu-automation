---
# https://github.com/elastic/helm-charts/blob/master/elasticsearch/values.yaml

clusterName: "${cluster_name}"
nodeGroup: "${node_group}"
masterService: "${cluster_name}-${node_group}"

roles:
  master: "true"
  ingest: "true"
  data: "true"

resources:
  requests:
    cpu: "1"
    memory: "${es_mem}Gi"
  limits:
    cpu: "1"
    memory: "${es_mem}Gi"

initResources: {}

sidecarResources: {}

esJavaOpts: "-Xmx${es_mem / 2}g -Xms${es_mem / 2}g"

replicas: "${es_replicas}"

# readinessProbe minimal viable healthcheck
clusterHealthCheckParams: "timeout=1s"

esConfig:
 elasticsearch.yml: |
   xpack.monitoring.collection.enabled: true

persistence:
  enabled: true
volumeClaimTemplate:
  accessModes: [ "ReadWriteOnce" ]
  resources:
    requests:
      storage: "${storage_size}"

rbac:
  create: true

protocol: http
httpPort: 9200
transportPort: 9300

service:
  type: ClusterIP
  httpPortName: http
  transportPortName: transport

updateStrategy: OnDelete

sysctlVmMaxMapCount: 262144

sysctlInitContainer:
  enabled: true

lifecycle:
  postStart:
    exec:
      command:
        - bash
        - -c
        - |
          #!/bin/bash
          ES_URL=http://localhost:9200
          JSON='Content-Type: application/json'
          CURL='curl -XPUT -w "\n"'
          while [[ "$(curl -s -o /dev/null -w '%%{http_code}\n' $ES_URL)" != "200" ]]; do sleep 1; done
%{ for policy in policies ~}
          $CURL -XPUT "$ES_URL/_ilm/policy/${policy.name}" -H "$JSON" -d'${policy.json}'
%{ endfor ~}
%{ for index in indices ~}
          $CURL -XPUT "$ES_URL/_template/${index.name}-template?include_type_name" -H "$JSON" -d'${index.template}'
          $CURL -XPUT "$ES_URL/${index.name}-000001" -H "$JSON" -d'${index.settings}'
%{ endfor ~}
